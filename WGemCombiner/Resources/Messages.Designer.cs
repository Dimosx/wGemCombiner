//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WGemCombiner.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WGemCombiner.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste gem combining equations or parenthesis formula into the text box, then click the &apos;Parse custom recipe&apos; button.
        ///
        ///Set the &apos;delay&apos; to at LEAST as many milliseconds as a frame on GC2 is taking. Usually, 45-50 milliseconds is good, but lag varies greatly when there are more monsters on-screen. Web versions typically run 10-75ms, while Steam versions typically run 30-200ms. Setting the value too low could cause combine errors in long recipes and may cause the combine to use too much mana.
        ///
        ///Game gem info [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpCombinerMessage {
            get {
                return ResourceManager.GetString("HelpCombinerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working with the combiner.
        /// </summary>
        internal static string HelpCombinerTitle {
            get {
                return ResourceManager.GetString("HelpCombinerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contributors (alphabetic order):
        ///- 12345ieee: some spec parsing, preset recipes
        ///- CooLTanG: automate the &apos;Get Instructions&apos; &amp; &apos;Combine&apos; steps, fix window size/resolution issues, customizable hotkey
        ///- Hellrage: some GUI tweaks, skin, small bug fixes, preset and resource management
        ///- RobinHood70: code cleaning and revamping; partial localization support
        ///- Suuper: original author, initial idea, main program logic
        ///
        ///
        ///Release version: {0}
        ///
        ///To report a problem, see
        ///https://github.com/gemforce-team/wGemC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpCreditsMessage {
            get {
                return ResourceManager.GetString("HelpCreditsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credits.
        /// </summary>
        internal static string HelpCreditsTitle {
            get {
                return ResourceManager.GetString("HelpCreditsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To import new recipes, open or create the &quot;recipes.txt&quot; file in the same folder as your executable. Either parenthetical or equation recipes can be used, with equation recipes requiring a blank line between them. Comments can also be inserted on separate lines beginning with # or //..
        /// </summary>
        internal static string HelpImportingPresetsMessage {
            get {
                return ResourceManager.GetString("HelpImportingPresetsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding New Recipes.
        /// </summary>
        internal static string HelpImportingPresetsTitle {
            get {
                return ResourceManager.GetString("HelpImportingPresetsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Example of equation format:
        ///0 = o
        ///1 = 0 + 0
        ///2 = 1 + 0
        ///3 = 2 + 0
        ///
        ///Example of parenthesis format (same recipe as above):
        ///(2o+o)+o
        ///
        ///Formulas in parenthesis format will be converted to equations automatically when you hit the &apos;Parse recipe&apos; button. Equations are faster to process, though this will only be noticeable with large recipes or large numbers of recipes in the recipes.txt file..
        /// </summary>
        internal static string HelpInputFormatMessage {
            get {
                return ResourceManager.GetString("HelpInputFormatMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Formats.
        /// </summary>
        internal static string HelpInputFormatTitle {
            get {
                return ResourceManager.GetString("HelpInputFormatTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use one of the built-in recipes, first select a color + combine/spec from the top drop-down list.
        ///
        ///After selecting a color + combine/spec, the second drop-down list will display the preset options. The first number is number of base gems; the second number is the growth rate. Those marked with a &apos;-&apos; are 2^n combines, and are rarely the best for growth rate up to that cost. They are mostly included for convenience if you want easily comparable gem costs.
        ///
        ///Selecting a preset will display the recipe in  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelpPresetsMessage {
            get {
                return ResourceManager.GetString("HelpPresetsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presets.
        /// </summary>
        internal static string HelpPresetsTitle {
            get {
                return ResourceManager.GetString("HelpPresetsTitle", resourceCulture);
            }
        }
    }
}
